---
// ServicesGrid.astro
import theme from '../../lib/theme';

export interface Props {
  variant?: 'cards' | 'alternating' | 'masonry';
  sectionTitle?: string;
  sectionSubtitle?: string;
  services: Array<{
    icon: string;
    title: string;
    description: string;
    features?: string[];
    price?: string;
    link?: string;
    popular?: boolean;
    image?: string;
  }>;
  columns?: 2 | 3 | 4;
  showPricing?: boolean;
  showFeatures?: boolean;
  backgroundColor?: 'white' | 'gray' | 'gradient';
  buttonText?: string;
  centerContent?: boolean;
}

const {
  variant = 'cards',
  sectionTitle = 'Our Services',
  sectionSubtitle = 'Comprehensive solutions tailored to your business needs',
  services,
  columns = 3,
  showPricing = false,
  showFeatures = true,
  backgroundColor = 'white',
  buttonText = 'Learn More',
  centerContent = false
} = Astro.props;

const getGridColumns = () => {
  switch (columns) {
    case 2: return 'grid-cols-1 lg:grid-cols-2';
    case 3: return 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3';
    case 4: return 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4';
    default: return 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3';
  }
};
---

<section class={`services-grid variant-${variant} bg-${backgroundColor}`}>
  <div class="container">
    {(sectionTitle || sectionSubtitle) && (
      <div class={`section-header ${centerContent ? 'centered' : ''}`}>
        {sectionTitle && <h2 class="section-title">{sectionTitle}</h2>}
        {sectionSubtitle && <p class="section-subtitle">{sectionSubtitle}</p>}
      </div>
    )}

    {variant === 'cards' && (
      <div class={`services-cards-grid ${getGridColumns()}`}>
        {services.map((service, index) => (
          <div class={`service-card ${service.popular ? 'popular' : ''}`} data-index={index}>
            {service.popular && <div class="popular-badge">Most Popular</div>}
            
            <div class="card-header">
              <div class="service-icon">{service.icon}</div>
              <h3 class="service-title">{service.title}</h3>
              {showPricing && service.price && (
                <div class="service-price">{service.price}</div>
              )}
            </div>

            <p class="service-description">{service.description}</p>

            {showFeatures && service.features && service.features.length > 0 && (
              <ul class="service-features">
                {service.features.map((feature) => (
                  <li class="feature-item">
                    <span class="feature-check">✓</span>
                    {feature}
                  </li>
                ))}
              </ul>
            )}

            <div class="card-footer">
              <a href={service.link || '/contact'} class="service-button">
                {buttonText}
                <span class="button-arrow">→</span>
              </a>
            </div>
          </div>
        ))}
      </div>
    )}

    {variant === 'alternating' && (
      <div class="services-alternating">
        {services.map((service, index) => (
          <div class={`service-row ${index % 2 === 0 ? 'row-left' : 'row-right'}`} data-index={index}>
            <div class="service-content">
              <div class="service-icon large">{service.icon}</div>
              <h3 class="service-title">{service.title}</h3>
              <p class="service-description">{service.description}</p>
              
              {showFeatures && service.features && service.features.length > 0 && (
                <ul class="service-features horizontal">
                  {service.features.slice(0, 3).map((feature) => (
                    <li class="feature-tag">{feature}</li>
                  ))}
                </ul>
              )}

              <a href={service.link || '/contact'} class="service-button outline">
                {buttonText}
                <span class="button-arrow">→</span>
              </a>
            </div>

            {service.image && (
              <div class="service-visual">
                <img src={service.image} alt={service.title} class="service-image" />
              </div>
            )}
          </div>
        ))}
      </div>
    )}

    {variant === 'masonry' && (
      <div class="services-masonry">
        {services.map((service, index) => (
          <div class={`masonry-card ${service.popular ? 'featured' : ''}`} data-index={index}>
            <div class="masonry-header">
              <div class="service-icon">{service.icon}</div>
              <h3 class="service-title">{service.title}</h3>
            </div>

            <p class="service-description">{service.description}</p>

            {showFeatures && service.features && service.features.length > 0 && (
              <div class="masonry-features">
                {service.features.map((feature) => (
                  <span class="feature-badge">{feature}</span>
                ))}
              </div>
            )}

            {showPricing && service.price && (
              <div class="masonry-price">{service.price}</div>
            )}

            <a href={service.link || '/contact'} class="masonry-button">
              {buttonText}
            </a>
          </div>
        ))}
      </div>
    )}
  </div>
</section>

<style define:vars={{
  primaryColor: theme.colors.primary[500],
  primaryLight: theme.colors.primary[100],
  primaryDark: theme.colors.primary[700],
  neutral900: theme.colors.neutral[900],
  neutral800: theme.colors.neutral[800],
  neutral700: theme.colors.neutral[700],
  neutral600: theme.colors.neutral[600],
  neutral500: theme.colors.neutral[500],
  neutral200: theme.colors.neutral[200],
  neutral100: theme.colors.neutral[100],
  neutral50: theme.colors.neutral[50],
  successColor: theme.colors.success[500],
  fontDisplay: theme.typography.fontFamily.display.join(', '),
  fontSans: theme.typography.fontFamily.sans.join(', '),
  spacing20: theme.spacing[20],
  spacing16: theme.spacing[16],
  spacing12: theme.spacing[12],
  spacing8: theme.spacing[8],
  spacing6: theme.spacing[6],
  spacing4: theme.spacing[4],
  spacing3: theme.spacing[3],
  spacing2: theme.spacing[2],
  borderRadiusXl: theme.borderRadius.xl,
  borderRadius2xl: theme.borderRadius['2xl'],
  shadowMd: theme.boxShadow.md,
  shadowLg: theme.boxShadow.lg,
  shadowXl: theme.boxShadow.xl,
  animationNormal: theme.animation.duration.normal,
  animationSlow: theme.animation.duration.slow,
  easingInOut: theme.animation.easing['in-out'],
  containerMaxWidth: theme.layout.container.xl
}}>
  .services-grid {
    padding: var(--spacing20) 0;
    position: relative;
  }

  /* Background variants */
  .bg-white {
    background: white;
  }

  .bg-gray {
    background: var(--neutral50);
  }

  .bg-gradient {
    background: linear-gradient(135deg, var(--neutral50) 0%, var(--primaryLight) 100%);
  }

  .container {
    max-width: var(--containerMaxWidth);
    margin: 0 auto;
    padding: 0 var(--spacing6);
  }

  /* Section Header */
  .section-header {
    margin-bottom: var(--spacing16);
    animation: fadeInUp var(--animationSlow) var(--easingInOut);
  }

  .section-header.centered {
    text-align: center;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: var(--spacing16);
  }

  .section-title {
    font-family: var(--fontDisplay);
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 700;
    color: var(--neutral900);
    margin-bottom: var(--spacing4);
    line-height: 1.2;
  }

  .section-subtitle {
    font-family: var(--fontSans);
    font-size: 1.25rem;
    color: var(--neutral600);
    line-height: 1.6;
  }

  /* Cards Variant */
  .services-cards-grid {
    display: grid;
    gap: var(--spacing8);
  }

  .grid-cols-1 { grid-template-columns: 1fr; }
  
  @media (min-width: 768px) {
    .grid-cols-1.md\\:grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
  }
  
  @media (min-width: 1024px) {
    .grid-cols-1.lg\\:grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
    .grid-cols-1.md\\:grid-cols-2.lg\\:grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
    .grid-cols-1.md\\:grid-cols-2.lg\\:grid-cols-4 { grid-template-columns: repeat(4, 1fr); }
  }

  .service-card {
    background: white;
    border-radius: var(--borderRadius2xl);
    padding: var(--spacing8);
    box-shadow: var(--shadowMd);
    border: 1px solid var(--neutral100);
    transition: all var(--animationNormal) var(--easingInOut);
    position: relative;
    overflow: hidden;
    animation: fadeInUp var(--animationSlow) var(--easingInOut);
    animation-delay: calc(var(--index, 0) * 100ms);
  }

  .service-card:hover {
    transform: translateY(-8px);
    box-shadow: var(--shadowXl);
    border-color: var(--primaryColor);
  }

  .service-card.popular {
    border-color: var(--primaryColor);
    border-width: 2px;
    transform: scale(1.02);
  }

  .popular-badge {
    position: absolute;
    top: var(--spacing4);
    right: var(--spacing4);
    background: linear-gradient(135deg, var(--primaryColor), var(--primaryDark));
    color: white;
    padding: var(--spacing2) var(--spacing3);
    border-radius: var(--borderRadiusXl);
    font-size: 0.75rem;
    font-weight: 600;
    font-family: var(--fontSans);
  }

  .card-header {
    margin-bottom: var(--spacing6);
  }

  .service-icon {
    font-size: 3rem;
    margin-bottom: var(--spacing4);
    display: block;
  }

  .service-icon.large {
    font-size: 4rem;
    margin-bottom: var(--spacing6);
  }

  .service-title {
    font-family: var(--fontDisplay);
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--neutral900);
    margin-bottom: var(--spacing3);
    line-height: 1.3;
  }

  .service-price {
    font-family: var(--fontDisplay);
    font-size: 2rem;
    font-weight: 700;
    color: var(--primaryColor);
    margin-top: var(--spacing2);
  }

  .service-description {
    font-family: var(--fontSans);
    color: var(--neutral600);
    line-height: 1.6;
    margin-bottom: var(--spacing6);
  }

  .service-features {
    list-style: none;
    padding: 0;
    margin: 0 0 var(--spacing6) 0;
  }

  .feature-item {
    display: flex;
    align-items: center;
    gap: var(--spacing3);
    font-family: var(--fontSans);
    color: var(--neutral700);
    margin-bottom: var(--spacing3);
    font-size: 0.9rem;
  }

  .feature-check {
    color: var(--successColor);
    font-weight: bold;
    flex-shrink: 0;
  }

  .card-footer {
    margin-top: auto;
  }

  .service-button {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing2);
    font-family: var(--fontSans);
    font-weight: 600;
    color: var(--primaryColor);
    text-decoration: none;
    padding: var(--spacing3) var(--spacing4);
    border-radius: var(--borderRadiusXl);
    border: 2px solid var(--primaryColor);
    background: transparent;
    transition: all var(--animationNormal) var(--easingInOut);
  }

  .service-button:hover {
    background: var(--primaryColor);
    color: white;
    transform: translateX(4px);
  }

  .service-button.outline {
    background: white;
    box-shadow: var(--shadowMd);
  }

  .button-arrow {
    transition: transform var(--animationNormal) var(--easingInOut);
  }

  .service-button:hover .button-arrow {
    transform: translateX(4px);
  }

  /* Alternating Variant */
  .services-alternating {
    display: flex;
    flex-direction: column;
    gap: var(--spacing16);
  }

  .service-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing12);
    align-items: center;
    animation: fadeInUp var(--animationSlow) var(--easingInOut);
    animation-delay: calc(var(--index, 0) * 200ms);
  }

  .service-row.row-right {
    direction: rtl;
  }

  .service-row.row-right > * {
    direction: ltr;
  }

  .service-content {
    padding: var(--spacing8);
  }

  .service-features.horizontal {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing2);
    margin: var(--spacing4) 0;
  }

  .feature-tag {
    background: var(--primaryLight);
    color: var(--primaryDark);
    padding: var(--spacing2) var(--spacing3);
    border-radius: var(--borderRadiusXl);
    font-size: 0.8rem;
    font-weight: 500;
    list-style: none;
  }

  .service-visual {
    position: relative;
  }

  .service-image {
    width: 100%;
    height: 300px;
    object-fit: cover;
    border-radius: var(--borderRadius2xl);
    box-shadow: var(--shadowLg);
  }

  /* Masonry Variant */
  .services-masonry {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--spacing6);
    grid-auto-rows: max-content;
  }

  .masonry-card {
    background: white;
    border-radius: var(--borderRadius2xl);
    padding: var(--spacing6);
    box-shadow: var(--shadowMd);
    border: 1px solid var(--neutral100);
    transition: all var(--animationNormal) var(--easingInOut);
    animation: fadeInUp var(--animationSlow) var(--easingInOut);
    animation-delay: calc(var(--index, 0) * 150ms);
  }

  .masonry-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadowLg);
  }

  .masonry-card.featured {
    background: linear-gradient(135deg, var(--primaryLight), white);
    border-color: var(--primaryColor);
  }

  .masonry-header {
    margin-bottom: var(--spacing4);
  }

  .masonry-features {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing2);
    margin: var(--spacing4) 0;
  }

  .feature-badge {
    background: var(--neutral100);
    color: var(--neutral700);
    padding: var(--spacing2) var(--spacing3);
    border-radius: var(--borderRadiusXl);
    font-size: 0.75rem;
    font-weight: 500;
  }

  .masonry-price {
    font-family: var(--fontDisplay);
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primaryColor);
    margin: var(--spacing4) 0;
  }

  .masonry-button {
    display: block;
    width: 100%;
    text-align: center;
    font-family: var(--fontSans);
    font-weight: 600;
    color: white;
    background: linear-gradient(135deg, var(--primaryColor), var(--primaryDark));
    text-decoration: none;
    padding: var(--spacing3) var(--spacing4);
    border-radius: var(--borderRadiusXl);
    transition: all var(--animationNormal) var(--easingInOut);
    margin-top: var(--spacing4);
  }

  .masonry-button:hover {
    transform: translateY(-2px);
    filter: brightness(1.1);
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .service-row {
      grid-template-columns: 1fr;
      gap: var(--spacing8);
      text-align: center;
    }

    .service-row.row-right {
      direction: ltr;
    }

    .services-masonry {
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    }
  }

  @media (max-width: 768px) {
    .services-grid {
      padding: var(--spacing16) 0;
    }

    .section-header {
      margin-bottom: var(--spacing12);
    }

    .services-cards-grid {
      gap: var(--spacing6);
    }

    .service-card {
      padding: var(--spacing6);
    }

    .services-alternating {
      gap: var(--spacing12);
    }

    .services-masonry {
      grid-template-columns: 1fr;
      gap: var(--spacing4);
    }
  }

  /* Animations */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    .services-grid *,
    .services-grid *::before,
    .services-grid *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>