---
// StatsAndMilestones.astro - Company statistics and milestone achievements
import theme from '../../lib/therme';

export interface Props {
  // Content props
  eyebrow?: string;
  headline?: string;
  description?: string;
  
  // Statistics
  stats?: Array<{
    id: string;
    number: string;
    suffix?: string;
    label: string;
    description?: string;
    icon?: string;
    highlight?: boolean;
  }>;
  
  // Milestones/Timeline
  milestones?: Array<{
    id: string;
    year: string;
    title: string;
    description: string;
    achievement?: string;
    type: 'founding' | 'growth' | 'product' | 'recognition' | 'expansion';
    featured?: boolean;
  }>;
  
  // Achievement highlights
  achievements?: Array<{
    id: string;
    title: string;
    description: string;
    icon: string;
    metric?: string;
    category: 'award' | 'certification' | 'milestone' | 'media';
  }>;
  
  // Layout variant
  variant?: 'default' | 'timeline' | 'grid' | 'minimal';
  
  // Additional settings
  showTimeline?: boolean;
  showCounter?: boolean;
  counterDuration?: number;
}

const {
  eyebrow = "Our Journey",
  headline = "Built on Results, Proven by Numbers",
  description = "From startup to industry leader, our growth reflects the success we deliver for clients every day.",
  variant = "default",
  showTimeline = true,
  showCounter = true,
  counterDuration = 2000,
  stats = [
    {
      id: "clients",
      number: "500",
      suffix: "+",
      label: "Happy Clients",
      description: "Businesses we've helped grow",
      icon: "üë•",
      highlight: true
    },
    {
      id: "projects",
      number: "1200",
      suffix: "+",
      label: "Projects Delivered",
      description: "Successful launches and deployments",
      icon: "üöÄ",
      highlight: false
    },
    {
      id: "revenue",
      number: "50M",
      suffix: "+",
      label: "Client Revenue Generated",
      description: "Direct business impact created",
      icon: "üí∞",
      highlight: true
    },
    {
      id: "retention",
      number: "95",
      suffix: "%",
      label: "Client Retention Rate",
      description: "Clients who continue working with us",
      icon: "‚ù§Ô∏è",
      highlight: false
    },
    {
      id: "team",
      number: "45",
      suffix: "",
      label: "Team Members",
      description: "Talented professionals across 12 countries",
      icon: "üåç",
      highlight: false
    },
    {
      id: "experience",
      number: "8",
      suffix: " Years",
      label: "Average Team Experience",
      description: "Senior expertise in every project",
      icon: "‚≠ê",
      highlight: false
    }
  ],
  milestones = [
    {
      id: "founding",
      year: "2018",
      title: "Company Founded",
      description: "Started with a vision to help businesses thrive online through strategic digital solutions.",
      achievement: "Launched with 2 co-founders and a mission",
      type: "founding",
      featured: true
    },
    {
      id: "first-clients",
      year: "2019",
      title: "First 50 Clients",
      description: "Reached our first major milestone, establishing proven methodologies and building lasting partnerships.",
      achievement: "50 successful client projects",
      type: "growth",
      featured: false
    },
    {
      id: "team-growth",
      year: "2020",
      title: "Team Expansion",
      description: "Grew to 15 team members and launched our remote-first culture during global challenges.",
      achievement: "300% team growth despite pandemic",
      type: "growth",
      featured: false
    },
    {
      id: "platform-launch",
      year: "2021",
      title: "Platform Launch",
      description: "Launched our proprietary client portal and project management system, revolutionizing our delivery process.",
      achievement: "50% faster project delivery",
      type: "product",
      featured: true
    },
    {
      id: "industry-recognition",
      year: "2022",
      title: "Industry Recognition",
      description: "Named 'Best Digital Agency' by TechReview and featured in Inc. Magazine's fastest-growing companies.",
      achievement: "Top 5% industry ranking",
      type: "recognition",
      featured: true
    },
    {
      id: "global-expansion",
      year: "2023",
      title: "Global Expansion",
      description: "Expanded operations to serve clients across 25 countries with localized expertise and support.",
      achievement: "5x international client growth",
      type: "expansion",
      featured: false
    },
    {
      id: "milestone-500",
      year: "2024",
      title: "500+ Client Milestone",
      description: "Reached 500 successful client partnerships while maintaining our 95% retention rate.",
      achievement: "$50M+ in client revenue generated",
      type: "milestone",
      featured: true
    }
  ],
  achievements = [
    {
      id: "best-agency",
      title: "Best Digital Agency 2024",
      description: "TechReview Awards",
      icon: "üèÜ",
      metric: "Top 1%",
      category: "award"
    },
    {
      id: "inc-5000",
      title: "Inc. 5000 Fastest Growing",
      description: "3 consecutive years",
      icon: "üìà",
      metric: "450% growth",
      category: "recognition"
    },
    {
      id: "certified-partner",
      title: "Google Premier Partner",
      description: "Top-tier certification status",
      icon: "‚ú®",
      category: "certification"
    },
    {
      id: "client-satisfaction",
      title: "Client Satisfaction Score",
      description: "Based on 200+ reviews",
      icon: "‚≠ê",
      metric: "4.9/5.0",
      category: "milestone"
    }
  ]
} = Astro.props;

// Helper function to determine milestone icon
function getMilestoneIcon(type: string): string {
  const icons = {
    founding: "üå±",
    growth: "üìà",
    product: "üöÄ",
    recognition: "üèÜ",
    expansion: "üåç",
    milestone: "üéØ"
  };
  return icons[type] || "üìç";
}
---

<section class="stats-milestones" aria-labelledby="stats-headline">
  <div class="stats-container">
    
    <!-- Section Header -->
    <div class="section-header" data-animate="fade-up">
      <span class="section-eyebrow">{eyebrow}</span>
      <h2 id="stats-headline" class="section-headline">
        {headline}
      </h2>
      <p class="section-description">
        {description}
      </p>
    </div>

    <!-- Statistics Grid -->
    <div class="stats-section" data-animate="fade-up" data-delay="200">
      <div class={`stats-grid variant-${variant}`}>
        {stats.map((stat, index) => (
          <div 
            class={`stat-card ${stat.highlight ? 'highlighted' : ''}`}
            data-animate="fade-up"
            data-delay={300 + (index * 100)}
            key={stat.id}
          >
            <div class="stat-content">
              <div class="stat-header">
                {stat.icon && (
                  <div class="stat-icon">
                    <span role="img" aria-hidden="true">{stat.icon}</span>
                  </div>
                )}
                <div class="stat-number-container">
                  <div class="stat-number" data-counter={showCounter ? stat.number : null}>
                    {showCounter ? "0" : stat.number}<span class="stat-suffix">{stat.suffix || ""}</span>
                  </div>
                </div>
              </div>
              
              <div class="stat-details">
                <h3 class="stat-label">{stat.label}</h3>
                {stat.description && (
                  <p class="stat-description">{stat.description}</p>
                )}
              </div>
            </div>
            
            {stat.highlight && (
              <div class="stat-highlight-badge">
                <span>Key Metric</span>
              </div>
            )}
          </div>
        ))}
      </div>
    </div>

    <!-- Achievements Grid -->
    {achievements && achievements.length > 0 && (
      <div class="achievements-section" data-animate="fade-up" data-delay="400">
        <div class="achievements-header">
          <h3 class="subsection-title">Recognition & Achievements</h3>
          <p class="subsection-description">
            Industry recognition that validates our commitment to excellence.
          </p>
        </div>
        
        <div class="achievements-grid">
          {achievements.map((achievement, index) => (
            <div 
              class={`achievement-card category-${achievement.category}`}
              data-animate="fade-up"
              data-delay={500 + (index * 100)}
              key={achievement.id}
            >
              <div class="achievement-icon">
                <span role="img" aria-hidden="true">{achievement.icon}</span>
              </div>
              <div class="achievement-content">
                <h4 class="achievement-title">{achievement.title}</h4>
                <p class="achievement-description">{achievement.description}</p>
                {achievement.metric && (
                  <div class="achievement-metric">{achievement.metric}</div>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Timeline Section */}
    {showTimeline && milestones && milestones.length > 0 && (
      <div class="timeline-section" data-animate="fade-up" data-delay="600">
        <div class="timeline-header">
          <h3 class="subsection-title">Our Journey</h3>
          <p class="subsection-description">
            Key milestones that shaped our growth and success.
          </p>
        </div>
        
        <div class="timeline-container">
          <div class="timeline-line" aria-hidden="true"></div>
          
          {milestones.map((milestone, index) => (
            <div 
              class={`timeline-item ${milestone.featured ? 'featured' : ''} type-${milestone.type}`}
              data-animate="fade-up"
              data-delay={700 + (index * 150)}
              key={milestone.id}
            >
              <div class="timeline-marker">
                <div class="marker-content">
                  <span class="marker-icon" role="img" aria-hidden="true">
                    {getMilestoneIcon(milestone.type)}
                  </span>
                </div>
              </div>
              
              <div class="timeline-content">
                <div class="timeline-year">{milestone.year}</div>
                <h4 class="timeline-title">{milestone.title}</h4>
                <p class="timeline-description">{milestone.description}</p>
                {milestone.achievement && (
                  <div class="timeline-achievement">
                    <svg class="achievement-icon" width="16" height="16" viewBox="0 0 16 16" fill="none">
                      <path d="M8 0L9.798 5.292L16 6.062L11.494 10.708L12.944 16L8 13.292L3.056 16L4.506 10.708L0 6.062L6.202 5.292L8 0Z" fill="currentColor"/>
                    </svg>
                    <span class="achievement-text">{milestone.achievement}</span>
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Call to Action -->
    <div class="stats-cta" data-animate="fade-up" data-delay="1000">
      <div class="cta-content">
        <h3 class="cta-title">Ready to Become Our Next Success Story?</h3>
        <p class="cta-description">
          Join hundreds of companies that have transformed their business with our proven approach.
        </p>
        <div class="cta-actions">
          <a href="/contact" class="cta-primary">
            Start Your Project
            <svg class="cta-arrow" width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M4.16667 10H15.8333M15.8333 10L10.8333 5M15.8333 10L10.8333 15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </a>
          <a href="/case-studies" class="cta-secondary">
            View Case Studies
          </a>
        </div>
      </div>
    </div>
  </div>

  <!-- Background Decoration -->
  <div class="stats-decoration" aria-hidden="true">
    <div class="decoration-elements">
      <div class="floating-number">500+</div>
      <div class="floating-number">95%</div>
      <div class="floating-number">50M+</div>
    </div>
  </div>
</section>

<style define:vars={{
  primaryColor: theme.colors.primary[500],
  primaryHover: theme.colors.primary[600],
  primaryLight: theme.colors.primary[100],
  primaryDark: theme.colors.primary[700],
  secondaryColor: theme.colors.secondary[500],
  successColor: theme.colors.success[500],
  warningColor: theme.colors.warning[500],
  neutralWhite: theme.colors.neutral[50],
  neutralGray: theme.colors.neutral[500],
  neutralDark: theme.colors.neutral[900],
  neutralLight: theme.colors.neutral[100],
  borderColor: theme.colors.border,
  fontSans: theme.typography.fontFamily.sans.join(', '),
  fontDisplay: theme.typography.fontFamily.display.join(', '),
  spacing2: theme.spacing[2],
  spacing3: theme.spacing[3],
  spacing4: theme.spacing[4],
  spacing6: theme.spacing[6],
  spacing8: theme.spacing[8],
  spacing12: theme.spacing[12],
  spacing16: theme.spacing[16],
  spacing20: theme.spacing[20],
  spacing24: theme.spacing[24],
  borderRadiusLg: theme.borderRadius.lg,
  borderRadius2xl: theme.borderRadius['2xl'],
  shadowMd: theme.boxShadow.md,
  shadowLg: theme.boxShadow.lg,
  shadow2xl: theme.boxShadow['2xl']
}}>
  .stats-milestones {
    position: relative;
    padding: var(--spacing24) 0;
    background: linear-gradient(180deg, #ffffff 0%, #f8fafc 50%, #ffffff 100%);
    overflow: hidden;
  }

  .stats-container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 var(--spacing4);
    position: relative;
    z-index: 10;
  }

  @media (min-width: 768px) {
    .stats-container {
      padding: 0 var(--spacing6);
    }
  }

  /* Section Header */
  .section-header {
    text-align: center;
    margin-bottom: var(--spacing20);
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
  }

  .section-eyebrow {
    display: inline-block;
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--primaryColor);
    background: var(--primaryLight);
    padding: var(--spacing2) var(--spacing4);
    border-radius: var(--borderRadiusLg);
    margin-bottom: var(--spacing6);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .section-headline {
    font-family: var(--fontDisplay);
    font-size: 2.5rem;
    font-weight: 700;
    line-height: 1.2;
    color: var(--neutralDark);
    margin: 0 0 var(--spacing6) 0;
  }

  @media (min-width: 768px) {
    .section-headline {
      font-size: 3rem;
    }
  }

  .section-description {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--neutralGray);
    margin: 0;
  }

  /* Subsection Headers */
  .subsection-title {
    font-family: var(--fontDisplay);
    font-size: 1.875rem;
    font-weight: 600;
    color: var(--neutralDark);
    margin: 0 0 var(--spacing4) 0;
    text-align: center;
  }

  .subsection-description {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--neutralGray);
    text-align: center;
    max-width: 600px;
    margin: 0 auto var(--spacing12) auto;
  }

  /* Statistics Section */
  .stats-section {
    margin-bottom: var(--spacing24);
  }

  .stats-grid {
    display: grid;
    gap: var(--spacing8);
    grid-template-columns: 1fr;
  }

  @media (min-width: 640px) {
    .stats-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .stats-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .stats-grid.variant-minimal {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }

  .stats-grid.variant-grid {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }

  /* Stat Cards */
  .stat-card {
    background: var(--neutralWhite);
    border: 1px solid var(--borderColor);
    border-radius: var(--borderRadius2xl);
    padding: var(--spacing8);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    text-align: center;
  }

  .stat-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow2xl);
    border-color: var(--primaryColor);
  }

  .stat-card.highlighted {
    border-color: var(--primaryColor);
    background: linear-gradient(135deg, var(--neutralWhite) 0%, var(--primaryLight) 100%);
  }

  .stat-content {
    display: flex;
    flex-direction: column;
    gap: var(--spacing6);
    position: relative;
    z-index: 2;
  }

  .stat-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing4);
  }

  .stat-icon {
    font-size: 2.5rem;
    background: var(--primaryLight);
    width: 80px;
    height: 80px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .stat-number-container {
    display: flex;
    align-items: baseline;
    justify-content: center;
  }

  .stat-number {
    font-family: var(--fontDisplay);
    font-size: 3rem;
    font-weight: 700;
    color: var(--primaryColor);
    line-height: 1;
  }

  @media (min-width: 768px) {
    .stat-number {
      font-size: 3.5rem;
    }
  }

  .stat-suffix {
    font-size: 2rem;
    font-weight: 600;
    color: var(--primaryColor);
    margin-left: 2px;
  }

  .stat-details {
    text-align: center;
  }

  .stat-label {
    font-family: var(--fontDisplay);
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--neutralDark);
    margin: 0 0 var(--spacing3) 0;
    line-height: 1.3;
  }

  .stat-description {
    font-size: 0.9375rem;
    line-height: 1.5;
    color: var(--neutralGray);
    margin: 0;
  }

  .stat-highlight-badge {
    position: absolute;
    top: var(--spacing4);
    right: var(--spacing4);
    background: var(--primaryColor);
    color: var(--neutralWhite);
    padding: var(--spacing2) var(--spacing3);
    border-radius: var(--borderRadiusLg);
    font-size: 0.75rem;
    font-weight: 600;
    z-index: 3;
  }

  /* Achievements Section */
  .achievements-section {
    margin-bottom: var(--spacing24);
  }

  .achievements-header {
    margin-bottom: var(--spacing16);
  }

  .achievements-grid {
    display: grid;
    gap: var(--spacing6);
    grid-template-columns: 1fr;
  }

  @media (min-width: 640px) {
    .achievements-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .achievements-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  .achievement-card {
    background: var(--neutralWhite);
    border: 1px solid var(--borderColor);
    border-radius: var(--borderRadius2xl);
    padding: var(--spacing6);
    transition: all 0.3s ease;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing4);
  }

  .achievement-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadowLg);
    border-color: var(--primaryColor);
  }

  .achievement-card.category-award {
    border-color: var(--warningColor);
  }

  .achievement-card.category-recognition {
    border-color: var(--successColor);
  }

  .achievement-icon {
    font-size: 2rem;
    background: var(--primaryLight);
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .achievement-content {
    flex: 1;
    text-align: center;
  }

  .achievement-title {
    font-family: var(--fontDisplay);
    font-size: 1rem;
    font-weight: 600;
    color: var(--neutralDark);
    margin: 0 0 var(--spacing2) 0;
    line-height: 1.3;
  }

  .achievement-description {
    font-size: 0.875rem;
    line-height: 1.5;
    color: var(--neutralGray);
    margin: 0;
  }

  .achievement-metric {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--primaryColor);
    background: var(--primaryLight);
    padding: var(--spacing2) var(--spacing3);
    border-radius: var(--borderRadiusLg);
    margin-top: var(--spacing3);
    display: inline-block;
  }

  /* Timeline Section */
  .timeline-section {
    margin-bottom: var(--spacing24);
  }

  .timeline-header {
    margin-bottom: var(--spacing16);
  }

  .timeline-container {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
  }

  .timeline-line {
    position: absolute;
    left: 20px;
    top: 0;
    bottom: 0;
    width: 2px;
    background: linear-gradient(180deg, var(--primaryColor) 0%, var(--primaryLight) 100%);
    z-index: 1;
  }

  @media (min-width: 768px) {
    .timeline-line {
      left: 50%;
      transform: translateX(-50%);
    }
  }

  .timeline-item {
    position: relative;
    margin-bottom: var(--spacing12);
    padding-left: 60px;
  }

  @media (min-width: 768px) {
    .timeline-item {
      padding-left: 0;
      width: 50%;
    }

    .timeline-item:nth-child(even) {
      margin-left: 50%;
      padding-left: 60px;
    }

    .timeline-item:nth-child(odd) {
      padding-right: 60px;
      text-align: right;
    }
  }

  .timeline-marker {
    position: absolute;
    left: 0;
    top: 0;
    z-index: 2;
  }

  @media (min-width: 768px) {
    .timeline-item:nth-child(even) .timeline-marker {
      left: -20px;
    }

    .timeline-item:nth-child(odd) .timeline-marker {
      right: -20px;
      left: auto;
    }
  }

  .marker-content {
    width: 40px;
    height: 40px;
    background: var(--primaryColor);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 3px solid var(--neutralWhite);
    box-shadow: var(--shadowMd);
  }

  .timeline-item.featured .marker-content {
    width: 50px;
    height: 50px;
    background: linear-gradient(135deg, var(--primaryColor) 0%, var(--primaryDark) 100%);
  }

  .marker-icon {
    font-size: 1.2rem;
  }

  .timeline-content {
    background: var(--neutralWhite);
    border: 1px solid var(--borderColor);
    border-radius: var(--borderRadius2xl);
    padding: var(--spacing6);
    box-shadow: var(--shadowMd);
    transition: all 0.3s ease;
  }

  .timeline-content:hover {
    box-shadow: var(--shadowLg);
    border-color: var(--primaryColor);
  }

  .timeline-item.featured .timeline-content {
    border-color: var(--primaryColor);
    background: linear-gradient(135deg, var(--neutralWhite) 0%, var(--primaryLight) 100%);
  }

  .timeline-year {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--primaryColor);
    background: var(--primaryLight);
    padding: var(--spacing2) var(--spacing3);
    border-radius: var(--borderRadiusLg);
    display: inline-block;
    margin-bottom: var(--spacing3);
  }

  .timeline-title {
    font-family: var(--fontDisplay);
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--neutralDark);
    margin: 0 0 var(--spacing3) 0;
    line-height: 1.3;
  }

  .timeline-description {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--neutralGray);
    margin: 0 0 var(--spacing4) 0;
  }

  .timeline-achievement {
    display: flex;
    align-items: center;
    gap: var(--spacing2);
    background: var(--neutralLight);
    padding: var(--spacing3) var(--spacing4);
    border-radius: var(--borderRadiusLg);
    border-left: 3px solid var(--successColor);
  }

  @media (min-width: 768px) {
    .timeline-item:nth-child(odd) .timeline-achievement {
      justify-content: flex-end;
    }
  }

  .achievement-icon {
    color: var(--successColor);
    flex-shrink: 0;
  }

  .achievement-text {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--neutralDark);
  }

  /* Call to Action */
  .stats-cta {
    text-align: center;
    background: linear-gradient(135deg, var(--primaryColor) 0%, var(--primaryHover) 100%);
    color: var(--neutralWhite);
    border-radius: var(--borderRadius2xl);
    padding: var(--spacing16);
    margin-top: var(--spacing20);
  }

  .cta-content {
    max-width: 600px;
    margin: 0 auto;
  }

  .cta-title {
    font-family: var(--fontDisplay);
    font-size: 1.875rem;
    font-weight: 600;
    margin: 0 0 var(--spacing4) 0;
    line-height: 1.3;
  }

  @media (min-width: 768px) {
    .cta-title {
      font-size: 2.25rem;
    }
  }

  .cta-description {
    font-size: 1.125rem;
    line-height: 1.6;
    margin: 0 0 var(--spacing8) 0;
    opacity: 0.9;
  }

  .cta-actions {
    display: flex;
    flex-direction: column;
    gap: var(--spacing4);
    align-items: center;
  }

  @media (min-width: 640px) {
    .cta-actions {
      flex-direction: row;
      justify-content: center;
    }
  }

  .cta-primary {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing2);
    background: var(--neutralWhite);
    color: var(--primaryColor);
    padding: var(--spacing4) var(--spacing8);
    border-radius: var(--borderRadiusLg);
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    font-size: 1rem;
  }

  .cta-primary:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadowLg);
    background: var(--neutralLight);
  }

  .cta-arrow {
    transition: transform 0.3s ease;
  }

  .cta-primary:hover .cta-arrow {
    transform: translateX(4px);
  }

  .cta-secondary {
    color: var(--neutralWhite);
    padding: var(--spacing4) var(--spacing8);
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: var(--borderRadiusLg);
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    font-size: 1rem;
  }

  .cta-secondary:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.5);
  }

  /* Background Decoration */
  .stats-decoration {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;
    pointer-events: none;
    overflow: hidden;
  }

  .decoration-elements {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .floating-number {
    position: absolute;
    font-family: var(--fontDisplay);
    font-size: 8rem;
    font-weight: 900;
    color: var(--primaryLight);
    opacity: 0.1;
    z-index: 1;
    animation: float 8s ease-in-out infinite;
  }

  .floating-number:nth-child(1) {
    top: 10%;
    left: 5%;
    animation-delay: 0s;
  }

  .floating-number:nth-child(2) {
    top: 50%;
    right: 10%;
    animation-delay: 2s;
  }

  .floating-number:nth-child(3) {
    bottom: 20%;
    left: 15%;
    animation-delay: 4s;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
      opacity: 0.1;
    }
    50% {
      transform: translateY(-30px) rotate(5deg);
      opacity: 0.05;
    }
  }

  /* Animation utilities */
  [data-animate] {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease;
  }

  [data-animate].animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Counter animation */
  @keyframes countUp {
    from {
      opacity: 0.3;
    }
    to {
      opacity: 1;
    }
  }

  .stat-number.counting {
    animation: countUp 0.5s ease-out;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .stats-milestones {
      padding: var(--spacing16) 0;
    }

    .section-headline {
      font-size: 2rem;
    }

    .subsection-title {
      font-size: 1.5rem;
    }

    .stat-number {
      font-size: 2.5rem;
    }

    .stat-suffix {
      font-size: 1.5rem;
    }

    .stat-icon {
      width: 60px;
      height: 60px;
      font-size: 2rem;
    }

    .timeline-item {
      padding-left: 50px;
    }

    .timeline-line {
      left: 15px;
    }

    .timeline-marker {
      left: -5px;
    }

    .marker-content {
      width: 30px;
      height: 30px;
    }

    .timeline-item.featured .marker-content {
      width: 35px;
      height: 35px;
    }

    .marker-icon {
      font-size: 1rem;
    }

    .stats-cta {
      padding: var(--spacing12);
    }

    .cta-title {
      font-size: 1.5rem;
    }

    .floating-number {
      font-size: 6rem;
    }
  }

  /* Focus states for accessibility */
  .cta-primary:focus,
  .cta-secondary:focus {
    outline: 2px solid var(--neutralWhite);
    outline-offset: 2px;
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .floating-number {
      animation: none;
    }

    .stat-card:hover,
    .achievement-card:hover,
    .timeline-content:hover,
    .cta-primary:hover {
      transform: none;
    }

    [data-animate] {
      transition: opacity 0.3s ease;
    }

    .stat-number.counting {
      animation: none;
    }
  }

  /* Print styles */
  @media print {
    .stats-decoration,
    .cta-actions {
      display: none;
    }

    .stats-milestones {
      background: white;
    }

    .stat-card,
    .achievement-card,
    .timeline-content {
      border: 1px solid #ccc;
      box-shadow: none;
    }
  }
</style>

<script>
  // Animation on scroll
  document.addEventListener('DOMContentLoaded', function() {
    const animatedElements = document.querySelectorAll('[data-animate]');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const delay = entry.target.getAttribute('data-delay') || 0;
          setTimeout(() => {
            entry.target.classList.add('animate-in');
          }, parseInt(delay));
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    });

    animatedElements.forEach(el => observer.observe(el));

    // Counter animation
    const counters = document.querySelectorAll('[data-counter]');
    
    const counterObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const counter = entry.target;
          const target = parseInt(counter.getAttribute('data-counter'));
          const suffix = counter.querySelector('.stat-suffix')?.textContent || '';
          
          if (target && !counter.classList.contains('counted')) {
            counter.classList.add('counted');
            animateCounter(counter, target, suffix);
          }
          counterObserver.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.5
    });

    counters.forEach(counter => counterObserver.observe(counter));
  });

  // Counter animation function
  function animateCounter(element, target, suffix) {
    const duration = 2000; // 2 seconds
    const steps = 60;
    const increment = target / steps;
    const stepDuration = duration / steps;
    let current = 0;

    element.classList.add('counting');

    const timer = setInterval(() => {
      current += increment;
      
      if (current >= target) {
        current = target;
        clearInterval(timer);
        element.classList.remove('counting');
      }

      // Format the number based on its size
      let displayValue;
      if (target >= 1000000) {
        displayValue = (current / 1000000).toFixed(1) + 'M';
      } else if (target >= 1000) {
        displayValue = Math.floor(current / 1000) + 'K';
      } else {
        displayValue = Math.floor(current).toString();
      }

      // Handle special cases
      if (suffix === '%') {
        displayValue = Math.floor(current).toString();
      } else if (suffix === '+') {
        displayValue = Math.floor(current).toString();
      } else if (suffix === ' Years') {
        displayValue = Math.floor(current).toString();
      }

      element.childNodes[0].textContent = displayValue;
    }, stepDuration);
  }

  // Milestone type colors (for dynamic styling if needed)
  const milestoneColors = {
    founding: '#10b981', // green
    growth: '#3b82f6',   // blue
    product: '#8b5cf6',  // purple
    recognition: '#f59e0b', // amber
    expansion: '#ef4444',   // red
    milestone: '#06b6d4'    // cyan
  };
</script>