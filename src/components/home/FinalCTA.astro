---
// FinalCTA.astro - Simplified final call-to-action section
import theme from '../../lib/theme';

export interface Props {
  headline?: string;
  subheadline?: string;
  description?: string;
  primaryCta?: {
    text: string;
    href: string;
    external?: boolean;
  };
  secondaryCta?: {
    text: string;
    href: string;
    external?: boolean;
  };
  variant?: 'default' | 'centered' | 'minimal';
  showStats?: boolean;
  stats?: Array<{
    number: string;
    label: string;
    suffix?: string;
  }>;
  showGuarantee?: boolean;
  showTestimonial?: boolean;
  testimonial?: {
    quote: string;
    author: {
      name: string;
      title: string;
      company: string;
      avatar: string;
    };
  };
}

const {
  headline = "Ready to Transform Your Business?",
  subheadline = "Join 150+ Successful Companies",
  description = "Don't let another day pass with an underperforming digital presence. Take the first step toward exceptional growth and results that exceed your expectations.",
  primaryCta = { text: "Start Your Project Today", href: "/contact" },
  secondaryCta = { text: "Schedule Free Consultation", href: "/consultation" },
  variant = "default",
  showStats = true,
  stats = [
    { number: "150", suffix: "+", label: "Projects Delivered" },
    { number: "98", suffix: "%", label: "Client Satisfaction" },
    { number: "5", suffix: "x", label: "Average ROI" }
  ],
  showGuarantee = true,
  showTestimonial = true,
  testimonial = {
    quote: "Best investment we've made for our business. The ROI was evident within the first month, and their ongoing support has been exceptional.",
    author: {
      name: "Sarah Chen",
      title: "CEO",
      company: "TechGear Pro",
      avatar: "/testimonials/sarah-chen.jpg"
    }
  }
} = Astro.props;
---

<section class={`final-cta ${variant}`} aria-labelledby="final-cta-headline">
  <div class="container">
    
    <div class="content">
      <div class="text-content">
        <h2 id="final-cta-headline" class="headline">
          {headline}
        </h2>
        
        <p class="subheadline">{subheadline}</p>
        <p class="description">{description}</p>
        
        <div class="cta-buttons">
          <a href={primaryCta.href} class="btn btn-primary">
            {primaryCta.text}
            <svg class="arrow" width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M4.16667 10H15.8333M15.8333 10L10.8333 5M15.8333 10L10.8333 15" 
                    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </a>
          
          <a href={secondaryCta.href} class="btn btn-secondary">
            {secondaryCta.text}
          </a>
        </div>
        
        {showStats && stats.length > 0 && (
          <div class="stats">
            {stats.map((stat, index) => (
              <div class="stat-item" key={index}>
                <div class="stat-number">
                  <span class="value" data-count-to={stat.number}>0</span>
                  {stat.suffix && <span class="suffix">{stat.suffix}</span>}
                </div>
                <div class="stat-label">{stat.label}</div>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>

    {showGuarantee && (
      <div class="guarantee">
        <div class="guarantee-icon">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" 
                  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <div class="guarantee-content">
          <h3>100% Satisfaction Guarantee</h3>
          <p>We're so confident in our work that if you're not completely satisfied within 30 days, we'll make it right or provide a full refund.</p>
        </div>
      </div>
    )}

    {showTestimonial && testimonial && (
      <div class="testimonial">
        <blockquote class="quote">
          "{testimonial.quote}"
        </blockquote>
        
        <div class="author">
          <img 
            src={testimonial.author.avatar}
            alt={testimonial.author.name}
            class="avatar"
            width="48"
            height="48"
            loading="lazy"
          />
          <div class="author-info">
            <div class="name">{testimonial.author.name}</div>
            <div class="title">{testimonial.author.title}, {testimonial.author.company}</div>
          </div>
        </div>
      </div>
    )}
  </div>

  <div class="background-gradient" aria-hidden="true"></div>
</section>

<style define:vars={{
  // Import theme colors directly
  primaryColor: theme.colors.primary[500],
  primaryHover: theme.colors.primary[600],
  primaryLight: theme.colors.primary[100],
  secondaryColor: theme.colors.secondary[500],
  neutralWhite: theme.colors.neutral[50],
  neutralGray: theme.colors.neutral[500],
  neutralDark: theme.colors.neutral[900],
  borderColor: theme.colors.border,
  
  // Typography from theme
  fontSans: theme.typography.fontFamily.sans.join(', '),
  fontDisplay: theme.typography.fontFamily.display.join(', '),
  
  // Spacing from theme
  spacing3: theme.spacing[3],
  spacing4: theme.spacing[4],
  spacing6: theme.spacing[6],
  spacing8: theme.spacing[8],
  spacing12: theme.spacing[12],
  spacing16: theme.spacing[16],
  spacing20: theme.spacing[20],
  spacing24: theme.spacing[24],
  spacing32: theme.spacing[32],
  
  // Border radius from theme
  borderRadiusLg: theme.borderRadius.lg,
  borderRadius2xl: theme.borderRadius['2xl'],
  
  // Shadows from theme
  shadowMd: theme.boxShadow.md,
  shadowLg: theme.boxShadow.lg,
  shadow2xl: theme.boxShadow['2xl'],
  
  // Focus styles from theme
  focusWidth: theme.accessibility.focus.width,
  focusColor: theme.accessibility.focus.color,
  touchTargetMin: theme.accessibility.touchTarget.min
}}>
  .final-cta {
    position: relative;
    padding: var(--spacing32) 0;
    background: linear-gradient(135deg, var(--primaryColor) 0%, #0f172a 50%, var(--secondaryColor) 100%);
    color: var(--neutralWhite);
    overflow: hidden;
    min-height: 60vh;
  }

  .container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 var(--spacing4);
    position: relative;
    z-index: 10;
  }

  @media (min-width: 768px) {
    .container {
      padding: 0 var(--spacing6);
    }
  }

  /* Content Layout */
  .content {
    display: grid;
    gap: var(--spacing12);
    align-items: start;
    margin-bottom: var(--spacing20);
  }

  @media (min-width: 1024px) {
    .content {
      grid-template-columns: 2fr 1fr;
      gap: var(--spacing20);
    }
  }

  /* Text Content - Left Aligned */
  .text-content {
    text-align: left; /* Explicitly left-aligned */
  }

  .centered .text-content {
    text-align: left;
    
    margin: 0 auto;
  }

  .minimal .text-content {
    text-align: left;
   
    margin: 0 auto;
  }

  /* Typography */
  .headline {
    font-family: var(--fontDisplay);
    font-size: clamp(2rem, 5vw, 4rem);
    font-weight: 800;
    line-height: 1.1;
    margin: 0 0 var(--spacing6) 0;
    background: linear-gradient(135deg, var(--neutralWhite) 0%, var(--primaryColor) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .subheadline {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--primaryColor);
    margin: 0 0 var(--spacing4) 0;
  }

  .description {
    font-size: 1.25rem;
    line-height: 1.7;
    color: #d1d5db;
    margin: 0 0 var(--spacing8) 0;
    max-width: 60ch; /* Optimal reading width from theme */
  }

  /* Buttons */
  .cta-buttons {
    display: flex;
    gap: var(--spacing4);
    margin-bottom: var(--spacing12);
    flex-wrap: wrap;
  }

  .centered .cta-buttons {
    justify-content: left;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing3);
    font-family: var(--fontSans);
    font-size: 1.125rem;
    font-weight: 600;
    text-decoration: none;
    padding: var(--spacing4) var(--spacing8);
    border-radius: var(--borderRadiusLg);
    transition: all 0.3s ease;
    min-height: var(--touchTargetMin); /* Accessibility from theme */
    border: 2px solid transparent;
  }

  .btn:focus-visible {
    outline: var(--focusWidth) solid var(--focusColor);
    outline-offset: 2px;
  }

  .btn-primary {
    color: var(--neutralWhite);
    background: var(--primaryColor);
    border-color: var(--primaryColor);
    box-shadow: var(--shadow2xl);
  }

  .btn-primary:hover {
    background: var(--primaryHover);
    border-color: var(--primaryHover);
    transform: translateY(-2px);
    box-shadow: 0 20px 40px rgba(14, 165, 233, 0.4);
  }

  .btn-primary .arrow {
    transition: transform 0.3s ease;
  }

  .btn-primary:hover .arrow {
    transform: translateX(4px);
  }

  .btn-secondary {
    color: var(--neutralWhite);
    border-color: rgba(255, 255, 255, 0.3);
    backdrop-filter: blur(10px);
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: var(--primaryColor);
    transform: translateY(-2px);
  }

  /* Stats */
  .stats {
    display: flex;
    gap: var(--spacing8);
    flex-wrap: wrap;
  }

  .centered .stats {
    justify-content: start;
  }

  .stat-item {
    text-align: left;
  }

  .centered .stat-item {
    text-align: center;
  }

  .stat-number {
    font-family: var(--fontDisplay);
    font-size: 2.5rem;
    font-weight: 800;
    color: var(--primaryColor);
    line-height: 1;
    margin-bottom: var(--spacing2);
  }

  .stat-label {
    font-size: 0.875rem;
    color: #d1d5db;
    font-weight: 500;
  }

  /* Guarantee */
  .guarantee {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing4);
    padding: var(--spacing6);
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--borderRadiusLg);
    margin-bottom: var(--spacing16);
    backdrop-filter: blur(10px);
  }

  .guarantee-icon {
    color: var(--primaryColor);
    flex-shrink: 0;
  }

  .guarantee-content h3 {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--neutralWhite);
    margin: 0 0 var(--spacing2) 0;
  }

  .guarantee-content p {
    font-size: 0.9375rem;
    line-height: 1.6;
    color: #d1d5db;
    margin: 0;
  }

  /* Testimonial */
  .testimonial {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--borderRadius2xl);
    padding: var(--spacing8);
    backdrop-filter: blur(10px);
    text-align: left;
  }

  .centered .testimonial {
    text-align: center;
  }

  .quote {
    font-family: var(--fontDisplay);
    font-size: 1.25rem;
    font-weight: 400;
    line-height: 1.6;
    color: var(--neutralWhite);
    margin: 0 0 var(--spacing6) 0;
    font-style: italic;
  }

  .author {
    display: flex;
    align-items: center;
    gap: var(--spacing4);
  }

  .centered .author {
    justify-content: center;
  }

  .avatar {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    border: 2px solid var(--primaryColor);
  }

  .author-info {
    text-align: left;
  }

  .centered .author-info {
    text-align: center;
  }

  .name {
    font-size: 1rem;
    font-weight: 600;
    color: var(--neutralWhite);
    margin-bottom: 2px;
  }

  .title {
    font-size: 0.875rem;
    color: #d1d5db;
  }

  /* Background */
  .background-gradient {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(14, 165, 233, 0.1) 0%, rgba(168, 85, 247, 0.1) 100%);
    z-index: 1;
    pointer-events: none;
  }

  /* Mobile Optimizations */
  @media (max-width: 640px) {
    .final-cta {
      padding: var(--spacing20) 0;
    }

    .cta-buttons {
      flex-direction: column;
    }

    .btn {
      width: 100%;
      justify-content: center;
    }

    .stats {
      flex-direction: column;
      gap: var(--spacing4);
    }

    .author {
      flex-direction: column;
      text-align: center;
    }

    .author-info {
      text-align: center;
    }
  }

  /* Reduced Motion */
  @media (prefers-reduced-motion: reduce) {
    .btn,
    * {
      animation: none;
      transition: none;
    }
    
    .btn:hover {
      transform: none;
    }
  }

  /* High Contrast Mode */
  @media (prefers-contrast: high) {
    .final-cta {
      background: #000000;
    }
    
    .btn {
      border-width: 3px;
    }
  }
</style>

<script>
  // Simplified interaction controller
  class FinalCTAController {
    constructor() {
      this.statElements = document.querySelectorAll('.final-cta [data-count-to]');
      this.init();
    }

    init() {
      this.setupCounters();
      this.setupCTATracking();
    }

    setupCounters() {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting && !entry.target.hasAnimated) {
            this.animateCounter(entry.target);
            entry.target.hasAnimated = true;
          }
        });
      }, { threshold: 0.3 });

      this.statElements.forEach(el => observer.observe(el));
    }

    animateCounter(element) {
      const target = parseInt(element.dataset.countTo);
      const duration = 2000;
      
      let current = 0;
      const increment = target / 60;
      const timer = setInterval(() => {
        current += increment;
        if (current >= target) {
          current = target;
          clearInterval(timer);
        }
        element.textContent = Math.floor(current).toLocaleString();
      }, duration / 60);
    }

    setupCTATracking() {
      const buttons = document.querySelectorAll('.final-cta .btn');
      buttons.forEach(button => {
        button.addEventListener('click', () => {
          const type = button.classList.contains('btn-primary') ? 'primary' : 'secondary';
          console.log(`Final CTA clicked: ${type}`);
        });
      });
    }
  }

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new FinalCTAController();
  });
</script>