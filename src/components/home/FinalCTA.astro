---
// FinalCTA.astro - Final call-to-action section for conversion
import theme from '../../lib/theme';

export interface Props {
  // Content props
  headline?: string;
  subheadline?: string;
  description?: string;
  
  // CTA options
  primaryCta?: {
    text: string;
    href: string;
    external?: boolean;
  };
  secondaryCta?: {
    text: string;
    href: string;
    external?: boolean;
  };
  
  // Layout props
  variant?: 'centered' | 'split' | 'minimal' | 'urgency';
  showGuarantee?: boolean;
  showTestimonial?: boolean;
  showStats?: boolean;
  
  // Urgency elements
  urgencyText?: string;
  limitedOffer?: {
    title: string;
    description: string;
    deadline?: string;
  };
  
  // Trust signals
  guarantee?: {
    title: string;
    description: string;
    icon: string;
  };
  
  // Social proof
  finalTestimonial?: {
    quote: string;
    author: {
      name: string;
      title: string;
      company: string;
      avatar: string;
    };
  };
  
  // Final stats
  finalStats?: Array<{
    number: string;
    label: string;
    suffix?: string;
  }>;
  
  // Risk reversal
  riskReversal?: Array<{
    title: string;
    description: string;
    icon: string;
  }>;
}

const {
  headline = "Ready to Transform Your Business?",
  subheadline = "Join 150+ Successful Companies",
  description = "Don't let another day pass with an underperforming digital presence. Take the first step toward exceptional growth and results that exceed your expectations.",
  primaryCta = { text: "Start Your Project Today", href: "/contact" },
  secondaryCta = { text: "Schedule Free Consultation", href: "/consultation" },
  variant = "centered",
  showGuarantee = true,
  showTestimonial = true,
  showStats = true,
  urgencyText = "Limited spots available for Q2 2024",
  limitedOffer = {
    title: "Free Strategy Session",
    description: "Book your complimentary 60-minute strategy consultation this month and receive a custom digital roadmap worth $2,500 - absolutely free.",
    deadline: "Offer expires March 31, 2024"
  },
  guarantee = {
    title: "100% Satisfaction Guarantee",
    description: "We're so confident in our work that if you're not completely satisfied within 30 days, we'll make it right or provide a full refund.",
    icon: "üõ°Ô∏è"
  },
  finalTestimonial = {
    quote: "Best investment we've made for our business. The ROI was evident within the first month, and their ongoing support has been exceptional.",
    author: {
      name: "Sarah Chen",
      title: "CEO",
      company: "TechGear Pro",
      avatar: "/testimonials/sarah-chen.jpg"
    }
  },
  finalStats = [
    { number: "150", suffix: "+", label: "Projects Delivered" },
    { number: "98", suffix: "%", label: "Client Satisfaction" },
    { number: "5", suffix: "x", label: "Average ROI" }
  ],
  riskReversal = [
    {
      title: "30-Day Money-Back Guarantee",
      description: "Not satisfied? Get your money back, no questions asked.",
      icon: "üí∞"
    },
    {
      title: "Fixed-Price Projects",
      description: "No surprise costs or hidden fees. You know exactly what you'll pay.",
      icon: "üìã"
    },
    {
      title: "Dedicated Project Manager",
      description: "Direct access to your dedicated team throughout the entire project.",
      icon: "üë§"
    }
  ]
} = Astro.props;
---

<section class={`final-cta variant-${variant}`} aria-labelledby="final-cta-headline">
  <div class="final-cta-container">
    
    <!-- Urgency Banner -->
    {variant === 'urgency' && urgencyText && (
      <div class="urgency-banner" data-animate="fade-down">
        <div class="urgency-content">
          <svg class="urgency-icon" width="20" height="20" viewBox="0 0 20 20" fill="none">
            <path d="M10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18Z" stroke="currentColor" stroke-width="2"/>
            <path d="M10 6V10L13 13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          <span class="urgency-text">{urgencyText}</span>
        </div>
      </div>
    )}

    <!-- Main Content -->
    <div class="cta-main-content">
      
      {/* Centered Variant */}
      {variant === 'centered' && (
        <div class="centered-content" data-animate="fade-up">
          <div class="cta-header">
            <h2 id="final-cta-headline" class="cta-headline">
              {headline}
            </h2>
            <p class="cta-subheadline">{subheadline}</p>
            <p class="cta-description">{description}</p>
          </div>
          
          <div class="cta-actions">
            <a href={primaryCta.href} class="cta-primary">
              {primaryCta.text}
              <svg class="cta-arrow" width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M4.16667 10H15.8333M15.8333 10L10.8333 5M15.8333 10L10.8333 15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </a>
            
            <a href={secondaryCta.href} class="cta-secondary">
              {secondaryCta.text}
            </a>
          </div>
          
          {showStats && finalStats.length > 0 && (
            <div class="cta-stats">
              {finalStats.map((stat, index) => (
                <div class="stat-item" key={index}>
                  <div class="stat-number">
                    <span class="stat-value" data-count-to={stat.number}>0</span>
                    {stat.suffix && <span class="stat-suffix">{stat.suffix}</span>}
                  </div>
                  <div class="stat-label">{stat.label}</div>
                </div>
              ))}
            </div>
          )}
        </div>
      )}

      {/* Split Variant */}
      {variant === 'split' && (
        <div class="split-content">
          <div class="split-left" data-animate="fade-right">
            <h2 id="final-cta-headline" class="cta-headline">
              {headline}
            </h2>
            <p class="cta-subheadline">{subheadline}</p>
            <p class="cta-description">{description}</p>
            
            {limitedOffer && (
              <div class="limited-offer">
                <div class="offer-header">
                  <h3 class="offer-title">{limitedOffer.title}</h3>
                  {limitedOffer.deadline && (
                    <span class="offer-deadline">{limitedOffer.deadline}</span>
                  )}
                </div>
                <p class="offer-description">{limitedOffer.description}</p>
              </div>
            )}
          </div>
          
          <div class="split-right" data-animate="fade-left" data-delay="200">
            <div class="cta-card">
              <div class="card-content">
                <div class="cta-actions vertical">
                  <a href={primaryCta.href} class="cta-primary large">
                    {primaryCta.text}
                    <svg class="cta-arrow" width="24" height="24" viewBox="0 0 24 24" fill="none">
                      <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                  </a>
                  
                  <a href={secondaryCta.href} class="cta-secondary large">
                    {secondaryCta.text}
                  </a>
                </div>
                
                {showStats && finalStats.length > 0 && (
                  <div class="card-stats">
                    {finalStats.map((stat, index) => (
                      <div class="card-stat" key={index}>
                        <span class="card-stat-number" data-count-to={stat.number}>0</span>
                        <span class="card-stat-suffix">{stat.suffix}</span>
                        <span class="card-stat-label">{stat.label}</span>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Minimal Variant */}
      {variant === 'minimal' && (
        <div class="minimal-content" data-animate="fade-up">
          <h2 id="final-cta-headline" class="cta-headline minimal">
            {headline}
          </h2>
          <p class="cta-description minimal">{description}</p>
          
          <div class="cta-actions minimal">
            <a href={primaryCta.href} class="cta-primary minimal">
              {primaryCta.text}
            </a>
            <a href={secondaryCta.href} class="cta-secondary minimal">
              {secondaryCta.text}
            </a>
          </div>
        </div>
      )}
    </div>

    <!-- Trust Signals Row */
    <div class="trust-signals" data-animate="fade-up" data-delay="400">
      
      {/* Guarantee */}
      {showGuarantee && guarantee && (
        <div class="trust-item guarantee">
          <div class="trust-icon">
            <span role="img" aria-hidden="true">{guarantee.icon}</span>
          </div>
          <div class="trust-content">
            <h4 class="trust-title">{guarantee.title}</h4>
            <p class="trust-description">{guarantee.description}</p>
          </div>
        </div>
      )}
      
      {/* Risk Reversal Items */}
      {riskReversal.length > 0 && (
        <div class="risk-reversal-grid">
          {riskReversal.map((item, index) => (
            <div class="risk-item" key={index}>
              <div class="risk-icon">
                <span role="img" aria-hidden="true">{item.icon}</span>
              </div>
              <div class="risk-content">
                <h5 class="risk-title">{item.title}</h5>
                <p class="risk-description">{item.description}</p>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>

    <!-- Final Testimonial -->
    {showTestimonial && finalTestimonial && (
      <div class="final-testimonial" data-animate="fade-up" data-delay="600">
        <div class="testimonial-content">
          <div class="quote-icon">
            <svg width="32" height="32" viewBox="0 0 32 32" fill="none">
              <path d="M8 14C8 11.79 9.79 10 12 10C14.21 10 16 11.79 16 14C16 16.21 14.21 18 12 18H10V22H8V14ZM24 14C24 11.79 25.79 10 28 10C30.21 10 32 11.79 32 14C32 16.21 30.21 18 28 18H26V22H24V14Z" fill="currentColor"/>
            </svg>
          </div>
          
          <blockquote class="testimonial-quote">
            "{finalTestimonial.quote}"
          </blockquote>
          
          <div class="testimonial-author">
            <img 
              src={finalTestimonial.author.avatar}
              alt={finalTestimonial.author.name}
              class="author-avatar"
              width="48"
              height="48"
              loading="lazy"
            />
            <div class="author-info">
              <div class="author-name">{finalTestimonial.author.name}</div>
              <div class="author-title">{finalTestimonial.author.title}, {finalTestimonial.author.company}</div>
            </div>
          </div>
        </div>
      </div>
    )}

    <!-- Final Trust Bar -->
    <div class="final-trust-bar" data-animate="fade-up" data-delay="800">
      <div class="trust-bar-content">
        <div class="trust-indicators">
          <div class="trust-indicator">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M9 12L11 14L15 10M19 10C19 14.9706 14.9706 19 10 19C5.02944 19 1 14.9706 1 10C1 5.02944 5.02944 1 10 1C14.9706 1 19 5.02944 19 10Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <span>Free Consultation</span>
          </div>
          
          <div class="trust-indicator">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M10 1L12.09 6.26L18 7L13 12L14.18 18L10 15.27L5.82 18L7 12L2 7L7.91 6.26L10 1Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <span>5-Star Rated</span>
          </div>
          
          <div class="trust-indicator">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18Z" stroke="currentColor" stroke-width="2"/>
              <path d="M7 10L9 12L13 8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <span>30-Day Guarantee</span>
          </div>
          
          <div class="trust-indicator">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M16.5 10C16.5 13.5899 13.5899 16.5 10 16.5C6.41015 16.5 3.5 13.5899 3.5 10C3.5 6.41015 6.41015 3.5 10 3.5C13.5899 3.5 16.5 6.41015 16.5 10Z" stroke="currentColor" stroke-width="2"/>
              <path d="M10 7V10L12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <span>Fast Turnaround</span>
          </div>
        </div>
        
        <p class="trust-bar-text">
          Join hundreds of successful businesses. Start your transformation today.
        </p>
      </div>
    </div>
  </div>

  <!-- Background Elements -->
  <div class="cta-background" aria-hidden="true">
    <div class="bg-gradient"></div>
    <div class="bg-patterns">
      <div class="pattern-element element-1"></div>
      <div class="pattern-element element-2"></div>
      <div class="pattern-element element-3"></div>
      <div class="pattern-element element-4"></div>
    </div>
  </div>
</section>

<style define:vars={{
  primaryColor: theme.colors.primary[500],
  primaryHover: theme.colors.primary[600],
  primaryLight: theme.colors.primary[100],
  secondaryColor: theme.colors.secondary[500],
  successColor: theme.colors.success[500],
  neutralWhite: theme.colors.neutral[50],
  neutralGray: theme.colors.neutral[500],
  neutralDark: theme.colors.neutral[900],
  neutralLight: theme.colors.neutral[100],
  borderColor: theme.colors.border,
  fontSans: theme.typography.fontFamily.sans.join(', '),
  fontDisplay: theme.typography.fontFamily.display.join(', '),
  spacing4: theme.spacing[4],
  spacing6: theme.spacing[6],
  spacing8: theme.spacing[8],
  spacing12: theme.spacing[12],
  spacing16: theme.spacing[16],
  spacing20: theme.spacing[20],
  spacing24: theme.spacing[24],
  spacing32: theme.spacing[32],
  borderRadiusLg: theme.borderRadius.lg,
  borderRadius2xl: theme.borderRadius['2xl'],
  shadowMd: theme.boxShadow.md,
  shadowLg: theme.boxShadow.lg,
  shadow2xl: theme.boxShadow['2xl']
}}>
  .final-cta {
    position: relative;
    padding: var(--spacing32) 0;
    background: linear-gradient(135deg, #1e293b 0%, #0f172a 50%, #020617 100%);
    color: var(--neutralWhite);
    overflow: hidden;
  }

  .variant-urgency {
    padding-top: 0;
  }

  .final-cta-container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 var(--spacing4);
    position: relative;
    z-index: 10;
  }

  @media (min-width: 768px) {
    .final-cta-container {
      padding: 0 var(--spacing6);
    }
  }

  /* Urgency Banner */
  .urgency-banner {
    background: linear-gradient(90deg, var(--primaryColor), var(--secondaryColor));
    padding: var(--spacing4) 0;
    margin-bottom: var(--spacing20);
    text-align: center;
  }

  .urgency-content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--spacing3);
    font-weight: 600;
    color: var(--neutralWhite);
  }

  .urgency-icon {
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
  }

  /* Main Content Layouts */
  .cta-main-content {
    margin-bottom: var(--spacing20);
  }

  /* Centered Variant */
  .centered-content {
    text-align: center;
    max-width: 800px;
    margin: 0 auto;
  }

  .cta-header {
    margin-bottom: var(--spacing12);
  }

  .cta-headline {
    font-family: var(--fontDisplay);
    font-size: 3rem;
    font-weight: 800;
    line-height: 1.1;
    margin: 0 0 var(--spacing6) 0;
    background: linear-gradient(135deg, var(--neutralWhite) 0%, var(--primaryColor) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  @media (min-width: 768px) {
    .cta-headline {
      font-size: 4rem;
    }
  }

  .cta-headline.minimal {
    font-size: 2.5rem;
    background: var(--neutralWhite);
    -webkit-text-fill-color: var(--neutralWhite);
  }

  .cta-subheadline {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--primaryColor);
    margin: 0 0 var(--spacing4) 0;
  }

  .cta-description {
    font-size: 1.25rem;
    line-height: 1.7;
    color: #d1d5db;
    margin: 0;
  }

  .cta-description.minimal {
    font-size: 1.125rem;
    max-width: 600px;
    margin: 0 auto var(--spacing8) auto;
  }

  /* CTA Actions */
  .cta-actions {
    display: flex;
    gap: var(--spacing6);
    justify-content: center;
    align-items: center;
    margin-bottom: var(--spacing12);
    flex-wrap: wrap;
  }

  .cta-actions.vertical {
    flex-direction: column;
    gap: var(--spacing4);
  }

  .cta-actions.minimal {
    margin-bottom: 0;
  }

  .cta-primary {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing3);
    font-family: var(--fontSans);
    font-size: 1.125rem;
    font-weight: 700;
    color: var(--neutralWhite);
    background: var(--primaryColor);
    text-decoration: none;
    padding: var(--spacing4) var(--spacing8);
    border-radius: var(--borderRadiusLg);
    transition: all 0.3s ease;
    box-shadow: var(--shadow2xl);
    border: 2px solid var(--primaryColor);
    position: relative;
    overflow: hidden;
  }

  .cta-primary::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: left 0.5s ease;
  }

  .cta-primary:hover::before {
    left: 100%;
  }

  .cta-primary:hover,
  .cta-primary:focus {
    background: var(--primaryHover);
    border-color: var(--primaryHover);
    transform: translateY(-3px);
    box-shadow: 0 20px 40px rgba(14, 165, 233, 0.4);
  }

  .cta-primary:focus {
    outline: 2px solid var(--primaryColor);
    outline-offset: 2px;
  }

  .cta-primary.large {
    font-size: 1.25rem;
    padding: var(--spacing6) var(--spacing12);
    width: 100%;
    justify-content: center;
  }

  .cta-primary.minimal {
    font-size: 1rem;
    padding: var(--spacing3) var(--spacing6);
  }

  .cta-arrow {
    transition: transform 0.3s ease;
  }

  .cta-primary:hover .cta-arrow {
    transform: translateX(4px);
  }

  .cta-secondary {
    display: inline-flex;
    align-items: center;
    font-family: var(--fontSans);
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--neutralWhite);
    text-decoration: none;
    padding: var(--spacing4) var(--spacing6);
    border-radius: var(--borderRadiusLg);
    transition: all 0.3s ease;
    border: 2px solid rgba(255, 255, 255, 0.3);
    backdrop-filter: blur(10px);
  }

  .cta-secondary:hover,
  .cta-secondary:focus {
    background: rgba(255, 255, 255, 0.1);
    border-color: var(--primaryColor);
    transform: translateY(-2px);
  }

  .cta-secondary:focus {
    outline: 2px solid var(--primaryColor);
    outline-offset: 2px;
  }

  .cta-secondary.large {
    font-size: 1.125rem;
    padding: var(--spacing4) var(--spacing8);
    width: 100%;
    justify-content: center;
  }

  .cta-secondary.minimal {
    font-size: 1rem;
    padding: var(--spacing3) var(--spacing6);
  }

  /* Stats */
  .cta-stats {
    display: flex;
    justify-content: center;
    gap: var(--spacing8);
    flex-wrap: wrap;
  }

  .stat-item {
    text-align: center;
  }

  .stat-number {
    font-family: var(--fontDisplay);
    font-size: 2.5rem;
    font-weight: 800;
    color: var(--primaryColor);
    line-height: 1;
    margin-bottom: var(--spacing2);
    display: block;
  }

  .stat-label {
    font-size: 0.875rem;
    color: #d1d5db;
    font-weight: 500;
  }

  /* Split Variant */
  .split-content {
    display: grid;
    gap: var(--spacing12);
    align-items: center;
  }

  @media (min-width: 1024px) {
    .split-content {
      grid-template-columns: 1fr 1fr;
      gap: var(--spacing20);
    }
  }

  .split-left {
    order: 1;
  }

  .split-right {
    order: 2;
  }

  .limited-offer {
    background: rgba(14, 165, 233, 0.1);
    border: 1px solid rgba(14, 165, 233, 0.3);
    border-radius: var(--borderRadiusLg);
    padding: var(--spacing6);
    margin-top: var(--spacing8);
  }

  .offer-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--spacing4);
    margin-bottom: var(--spacing3);
    flex-wrap: wrap;
  }

  .offer-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--primaryColor);
    margin: 0;
  }

  .offer-deadline {
    font-size: 0.875rem;
    color: #fbbf24;
    background: rgba(251, 191, 36, 0.1);
    padding: 2px var(--spacing3);
    border-radius: var(--borderRadiusLg);
    font-weight: 500;
  }

  .offer-description {
    font-size: 1rem;
    line-height: 1.6;
    color: #d1d5db;
    margin: 0;
  }

  /* CTA Card */
  .cta-card {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--borderRadius2xl);
    padding: var(--spacing8);
    backdrop-filter: blur(20px);
    box-shadow: var(--shadow2xl);
  }

  .card-stats {
    display: flex;
    justify-content: space-around;
    margin-top: var(--spacing6);
    padding-top: var(--spacing6);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }

  .card-stat {
    text-align: center;
  }

  .card-stat-number {
    font-family: var(--fontDisplay);
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primaryColor);
    line-height: 1;
  }

  .card-stat-suffix {
    color: var(--primaryColor);
  }

  .card-stat-label {
    display: block;
    font-size: 0.75rem;
    color: #d1d5db;
    margin-top: 2px;
  }

  /* Trust Signals */
  .trust-signals {
    margin-bottom: var(--spacing16);
  }

  .trust-item {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing4);
    padding: var(--spacing6);
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--borderRadiusLg);
    margin-bottom: var(--spacing6);
    backdrop-filter: blur(10px);
  }

  .trust-icon {
    font-size: 1.5rem;
    flex-shrink: 0;
  }

  .trust-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--neutralWhite);
    margin: 0 0 var(--spacing2) 0;
  }

  .trust-description {
    font-size: 0.9375rem;
    line-height: 1.6;
    color: #d1d5db;
    margin: 0;
  }

  .risk-reversal-grid {
    display: grid;
    gap: var(--spacing4);
    grid-template-columns: 1fr;
  }

  @media (min-width: 640px) {
    .risk-reversal-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .risk-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    padding: var(--spacing4);
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--borderRadiusLg);
    transition: all 0.3s ease;
  }

  .risk-item:hover {
    background: rgba(255, 255, 255, 0.1);
    transform: translateY(-2px);
  }

  .risk-icon {
    font-size: 1.25rem;
    margin-bottom: var(--spacing3);
  }

  .risk-title {
    font-size: 0.9375rem;
    font-weight: 600;
    color: var(--neutralWhite);
    margin: 0 0 var(--spacing2) 0;
  }

  .risk-description {
    font-size: 0.875rem;
    line-height: 1.5;
    color: #d1d5db;
    margin: 0;
  }

  /* Final Testimonial */
  .final-testimonial {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--borderRadius2xl);
    padding: var(--spacing8);
    margin-bottom: var(--spacing16);
    backdrop-filter: blur(10px);
    text-align: center;
  }

  .quote-icon {
    color: var(--primaryColor);
    margin-bottom: var(--spacing4);
    opacity: 0.8;
  }

  .testimonial-quote {
    font-family: var(--fontDisplay);
    font-size: 1.25rem;
    font-weight: 400;
    line-height: 1.6;
    color: var(--neutralWhite);
    margin: 0 0 var(--spacing6) 0;
    font-style: italic;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .testimonial-author {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--spacing4);
  }

  .author-avatar {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    border: 2px solid var(--primaryColor);
  }

  .author-info {
    text-align: left;
  }

  .author-name {
    font-size: 1rem;
    font-weight: 600;
    color: var(--neutralWhite);
    margin-bottom: 2px;
  }

  .author-title {
    font-size: 0.875rem;
    color: #d1d5db;
  }

  /* Final Trust Bar */
  .final-trust-bar {
    text-align: center;
  }

  .trust-bar-content {
    max-width: 800px;
    margin: 0 auto;
  }

  .trust-indicators {
    display: flex;
    justify-content: center;
    gap: var(--spacing6);
    margin-bottom: var(--spacing4);
    flex-wrap: wrap;
  }

  .trust-indicator {
    display: flex;
    align-items: center;
    gap: var(--spacing2);
    font-size: 0.875rem;
    color: #d1d5db;
    font-weight: 500;
  }

  .trust-indicator svg {
    color: var(--primaryColor);
  }

  .trust-bar-text {
    font-size: 1rem;
    color: #d1d5db;
    margin: 0;
    font-weight: 500;
  }

  /* Background Elements */
  .cta-background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;
    pointer-events: none;
  }

  .bg-gradient {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(14, 165, 233, 0.1) 0%, rgba(168, 85, 247, 0.1) 100%);
  }

  .bg-patterns {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .pattern-element {
    position: absolute;
    opacity: 0.1;
    animation: float 15s ease-in-out infinite;
  }

  .element-1 {
    width: 200px;
    height: 200px;
    background: radial-gradient(circle, var(--primaryColor), transparent);
    top: 10%;
    left: 5%;
    animation-delay: 0s;
  }

  .element-2 {
    width: 150px;
    height: 150px;
    background: radial-gradient(circle, var(--secondaryColor), transparent);
    top: 60%;
    right: 10%;
    animation-delay: 5s;
  }

  .element-3 {
    width: 100px;
    height: 100px;
    background: linear-gradient(45deg, var(--primaryColor), var(--secondaryColor));
    bottom: 20%;
    left: 15%;
    border-radius: 50%;
    animation-delay: 10s;
  }

  .element-4 {
    width: 80px;
    height: 80px;
    background: linear-gradient(45deg, var(--secondaryColor), var(--primaryColor));
    top: 30%;
    right: 30%;
    transform: rotate(45deg);
    animation-delay: 7s;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    33% { transform: translateY(-30px) rotate(120deg); }
    66% { transform: translateY(15px) rotate(240deg); }
  }

  /* Animations */
  [data-animate] {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s ease;
  }

  [data-animate="fade-down"] {
    transform: translateY(-30px);
  }

  [data-animate="fade-right"] {
    transform: translateX(-30px);
  }

  [data-animate="fade-left"] {
    transform: translateX(30px);
  }

  [data-animate].animate {
    opacity: 1;
    transform: translateY(0);
  }

  [data-animate="fade-right"].animate,
  [data-animate="fade-left"].animate {
    transform: translateX(0);
  }

  /* Mobile Optimizations */
  @media (max-width: 640px) {
    .final-cta {
      padding: var(--spacing20) 0;
    }

    .cta-headline {
      font-size: 2rem;
    }

    .cta-headline.minimal {
      font-size: 1.75rem;
    }

    .cta-description {
      font-size: 1.125rem;
    }

    .cta-actions {
      flex-direction: column;
      gap: var(--spacing4);
    }

    .cta-primary,
    .cta-secondary {
      width: 100%;
      justify-content: center;
    }

    .cta-stats {
      flex-direction: column;
      gap: var(--spacing4);
    }

    .trust-indicators {
      flex-direction: column;
      gap: var(--spacing3);
      align-items: center;
    }

    .testimonial-author {
      flex-direction: column;
      text-align: center;
    }

    .author-info {
      text-align: center;
    }

    .risk-reversal-grid {
      grid-template-columns: 1fr;
    }

    .bg-patterns {
      display: none;
    }
  }

  /* Reduced Motion */
  @media (prefers-reduced-motion: reduce) {
    .cta-primary,
    .cta-secondary,
    .risk-item,
    .pattern-element,
    .urgency-icon {
      animation: none;
      transition: none;
    }
    
    .cta-primary:hover,
    .cta-secondary:hover,
    .risk-item:hover {
      transform: none;
    }
  }

  /* High Contrast Mode */
  @media (prefers-contrast: high) {
    .final-cta {
      background: #000000;
    }
    
    .cta-primary {
      border-width: 3px;
    }
    
    .cta-secondary {
      border-width: 3px;
    }
  }
</style>

<script>
  // Final CTA Animation and Interaction Controller
  class FinalCTAManager {
    constructor() {
      this.animatedElements = document.querySelectorAll('.final-cta [data-animate]');
      this.statElements = document.querySelectorAll('.final-cta [data-count-to]');
      this.ctaButtons = document.querySelectorAll('.cta-primary, .cta-secondary');
      this.urgencyTimer = null;
      
      this.init();
    }

    init() {
      this.setupScrollAnimations();
      this.setupCounters();
      this.setupCTATracking();
      this.setupUrgencyEffects();
      this.setupInteractionTracking();
    }

    setupScrollAnimations() {
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting && !entry.target.hasAnimated) {
            const delay = parseInt(entry.target.dataset.delay) || 0;
            setTimeout(() => {
              entry.target.classList.add('animate');
            }, delay);
            entry.target.hasAnimated = true;
          }
        });
      }, observerOptions);

      this.animatedElements.forEach(el => {
        observer.observe(el);
      });
    }

    setupCounters() {
      const observerOptions = {
        threshold: 0.3,
        rootMargin: '0px 0px -100px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting && !entry.target.hasAnimated) {
            this.animateCounter(entry.target);
            entry.target.hasAnimated = true;
          }
        });
      }, observerOptions);

      this.statElements.forEach(el => {
        observer.observe(el);
      });
    }

    animateCounter(element) {
      const target = parseInt(element.dataset.countTo);
      const duration = 2000;
      
      let counter = 0;
      const increment = target / 60; // 60 frames
      const timer = setInterval(() => {
        counter += increment;
        if (counter >= target) {
          counter = target;
          clearInterval(timer);
        }
        element.textContent = Math.floor(counter).toLocaleString();
      }, duration / 60);
    }

    setupCTATracking() {
      this.ctaButtons.forEach(button => {
        // Enhanced hover effects
        button.addEventListener('mouseenter', () => {
          button.style.setProperty('--hover-intensity', '1');
        });

        button.addEventListener('mouseleave', () => {
          button.style.setProperty('--hover-intensity', '0');
        });

        // Click tracking
        button.addEventListener('click', (e) => {
          const buttonText = button.textContent.trim();
          const buttonType = button.classList.contains('cta-primary') ? 'primary' : 'secondary';
          
          // Analytics tracking
          console.log(`Final CTA clicked: ${buttonText} (${buttonType})`);
          
          // Add click animation
          button.style.transform = 'scale(0.95)';
          setTimeout(() => {
            button.style.transform = '';
          }, 150);
        });

        // Keyboard accessibility
        button.addEventListener('keydown', (e) => {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            button.click();
          }
        });
      });
    }

    setupUrgencyEffects() {
      const urgencyBanner = document.querySelector('.urgency-banner');
      if (!urgencyBanner) return;

      // Add pulsing effect to urgency elements
      const urgencyIcon = document.querySelector('.urgency-icon');
      if (urgencyIcon) {
        setInterval(() => {
          urgencyIcon.style.transform = 'scale(1.1)';
          setTimeout(() => {
            urgencyIcon.style.transform = 'scale(1)';
          }, 200);
        }, 3000);
      }

      // Countdown timer if deadline is present
      const deadline = document.querySelector('.offer-deadline');
      if (deadline && deadline.textContent.includes('2024')) {
        this.setupCountdownTimer(deadline);
      }
    }

    setupCountdownTimer(element) {
      // Extract date from text (simplified - you'd want more robust parsing)
      const dateMatch = element.textContent.match(/(\w+)\s+(\d+),\s+(\d+)/);
      if (!dateMatch) return;

      const [, month, day, year] = dateMatch;
      const targetDate = new Date(`${month} ${day}, ${year} 23:59:59`);
      
      const updateCountdown = () => {
        const now = new Date();
        const timeLeft = targetDate - now;
        
        if (timeLeft <= 0) {
          element.textContent = 'Offer expired';
          return;
        }
        
        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        
        if (days > 0) {
          element.textContent = `${days} days, ${hours} hours left`;
        } else {
          element.textContent = `${hours} hours left`;
        }
      };

      updateCountdown();
      this.urgencyTimer = setInterval(updateCountdown, 60000); // Update every minute
    }

    setupInteractionTracking() {
      // Track section visibility
      const finalCTASection = document.querySelector('.final-cta');
      if (!finalCTASection) return;

      const sectionObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting && !entry.target.hasTracked) {
            console.log('Final CTA section viewed');
            entry.target.hasTracked = true;
          }
        });
      }, {
        threshold: 0.5
      });

      sectionObserver.observe(finalCTASection);

      // Track time spent in section
      let sectionEnterTime = null;
      const timeObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            sectionEnterTime = Date.now();
          } else if (sectionEnterTime) {
            const timeSpent = Date.now() - sectionEnterTime;
            if (timeSpent > 5000) { // More than 5 seconds
              console.log(`Time spent in Final CTA: ${Math.round(timeSpent / 1000)}s`);
            }
            sectionEnterTime = null;
          }
        });
      }, {
        threshold: 0.1
      });

      timeObserver.observe(finalCTASection);
    }

    // Public method to trigger CTA emphasis
    emphasizeCTA() {
      const primaryCTA = document.querySelector('.cta-primary');
      if (primaryCTA) {
        primaryCTA.style.animation = 'pulse 1s ease-in-out 3';
        setTimeout(() => {
          primaryCTA.style.animation = '';
        }, 3000);
      }
    }

    // Cleanup method
    destroy() {
      if (this.urgencyTimer) {
        clearInterval(this.urgencyTimer);
      }
    }
  }

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    window.finalCTAManager = new FinalCTAManager();
  });

  // Cleanup on page unload
  window.addEventListener('beforeunload', () => {
    if (window.finalCTAManager) {
      window.finalCTAManager.destroy();
    }
  });

  // Exit intent detection (desktop only)
  if (!('ontouchstart' in window)) {
    document.addEventListener('mouseleave', (e) => {
      if (e.clientY <= 0) {
        // Mouse left through top of page
        if (window.finalCTAManager) {
          window.finalCTAManager.emphasizeCTA();
        }
      }
    });
  }

  // Performance optimization
  if ('requestIdleCallback' in window) {
    requestIdleCallback(() => {
      console.log('Final CTA animations optimized');
    });
  }
</script>